<?php
/**
 * @file
 * Domain Access Entity install function
 */

/**
 * Implements hook_field_schema().
 */
function domain_entity_field_schema($field) {
  if ($field['type'] == 'domain_entity') {
    return array(
      'columns' => array(
        'domain_id' => array(
          'description' => 'The numeric unique ID of the domain.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 1,
        ),
      ),
      'indexes' => array(
        'domain_id' => array('domain_id'),
      ),
    );
  }
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function domain_entity_update_7000() { }


/**
 * Implements hook_uninstall().
 */
function domain_entity_uninstall() {
  config_clear('domain_entity.settings', 'domain_entity_allowed_entity_types');
  config_clear('domain_entity.settings', 'domain_entity_bypass_access_conditions');
  config_clear('domain_entity.settings', 'domain_entity_bypass_access_conditions_backup');
}

/**
 * Implements hook_update_last_removed().
 */
function domain_entity_update_last_removed() {
  return 7000;
}

/**
 * Migrate domain_entity variables to config.
 */
function domain_entity_update_1000() {
  $config = config('domain_entity.settings');
  $config->set('domain_entity_bypass_access_conditions', update_variable_get('domain_entity_bypass_access_conditions', array()));
  $config->set('domain_entity_allowed_entity_types', update_variable_get('domain_entity_allowed_entity_types', array()));
  $config->set('domain_entity_bypass_access_conditions_backup', update_variable_get('domain_entity_bypass_access_conditions_backup', array()));
  $config->save();

  update_variable_del('domain_entity_bypass_access_conditions');
  update_variable_del('domain_entity_allowed_entity_types');
  update_variable_del('domain_entity_bypass_access_conditions_backup');
}

/**
 * Implements hook_install().
 */
function domain_entity_install() {
  // Dynamically generated variable data was detected.
}
